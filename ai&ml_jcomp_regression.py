# -*- coding: utf-8 -*-
"""ai&ml jcomp regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lLvH29-NG_vzA6izzNkUBMVhvowMQ4FV
"""

import pandas as pd
d= pd.read_csv('/content/vgsales.csv')
print(d)

df=pd.read_csv('/content/vgsales.csv')
print(df.isnull())
df=df.fillna(0)

df.head()

df.info()

df.describe()

df.columns

df.shape

y=df['Global_Sales']
y

X=df[['NA_Sales','EU_Sales','Other_Sales',]]
X

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=2529)
X_train.shape,X_test.shape,y_train.shape,y_test.shape

y.shape

y

X.shape

X

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=2529)

X_train.shape,X_test.shape,y_train.shape,y_test.shape

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,mean_absolute_error

#reg_all=linear_model.LinearRegression()
#reg_all.fit(X_train,y_train)
#y_pred=reg_all.predict(X_test)
#Rsquare=reg_all.score(X_test,y_test)
#print("Rsquare: %f" %(Rsquare))

lr=LinearRegression()
lr.fit(X_train,y_train)

y_pred=lr.predict(X_test)

y_pred.shape
y_pred

import matplotlib.pyplot as plt
plt.scatter(y_test,y_pred)
plt.xlabel("Actual sales:-")
plt.ylabel("Predicted sales:-")
plt.title("Global_Sales")
plt.show

# LINEAR REGRESSION
from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X, y)
model = LinearRegression().fit(X, y)
r_sq = model.score(X, y)
print(f"coefficient of determination: {r_sq}")

print(f"intercept: {model.intercept_}")

print(f"coefficients: {model.coef_}")

from sklearn import linear_model
from sklearn.metrics import mean_squared_error,mean_absolute_error
reg_all=linear_model.LinearRegression()
reg_all.fit(X_train,y_train)
y_pred=reg_all.predict(X_test)
Rsquare=reg_all.score(X_test,y_test)
print("Rsquare: %f" %(Rsquare))
print("Intercept: %f" %(reg_all.intercept_))
mse=mean_squared_error(y_test,y_pred)
print("mse: %f" %(mse))
mae = mean_absolute_error(y_test,y_pred)
print("mae: %f" %(mae))