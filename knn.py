# -*- coding: utf-8 -*-
"""knn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZOzqsvDMBwm-IxcJgr6KALQnqSgvohZt
"""

from sklearn.neighbors import KNeighborsRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import pandas as pd

# Load dataset
dataset = pd.read_csv('/content/vgsales.csv')

# Split dataset into training and testing sets
X = dataset['Year'].values
y = dataset['Global_Sales'].values
x=(X.reshape(-1,1))
y=(y.reshape(-1,1))
#x_train=(x_train.reshape(-1,1))
#y_train(y_train.reshape(-1,1))

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
(X_train.reshape(-1,1), y_train.reshape(-1,1))

# Train the model
k = 5  # number of neighbors
model = KNeighborsRegressor(n_neighbors=k)
model.fit(X_train.reshape(-1,1),y_train.reshape(-1,1))

# Make predictions on the testing set
y_pred = model.predict(X_test.reshape(-1,1))

# Evaluate the model using mean squared error
mse = mean_squared_error(y_test, y_pred)
print(f"Mean squared error: {mse}")

import matplotlib.pyplot as plt

# Plot the dataset with the regression line
plt.scatter(X_test, y_test, color='blue', label='True values')
plt.scatter(X_test, y_pred, color='red', label='Predicted values')
plt.xlabel('X')
plt.ylabel('Y')
plt.title('KNN Regression')
plt.legend()
plt.show()